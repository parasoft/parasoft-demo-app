scalar DateTime

type Query {
    # category
    getCategoryById(categoryId: ID!): Category
    getCategoryByName(categoryName: String!): Category
    getCategories(searchString: String, page: Int, size: Int, sort: [String]): CategoryPageInfo
    # location
    getLocation(region: RegionType!): Location
    # order
    getOrderByOrderNumber(orderNumber: String!): Order
    #item
    getItems(categoryId: Int, regions: [RegionType], searchString: String, page: Int, size: Int, sort: [String]): ItemPageInfo
    getItemByItemId(itemId: ID!): Item
    getItemByName(itemName: String!): Item
    # cartItem
    getCartItems: [CartItemEntity]
}
type Mutation {
    # category
    addCategory(categoryDTO: CategoryDTO!): Category
    deleteCategoryById(categoryId: ID!): Int
    updateCategory(categoryId: ID!, categoryDto: CategoryDTO!): Category
    # order
    createOrder(orderDTO: OrderDTO!): Order
    #item
    updateItemInStockByItemId(itemId: ID!, newInStock: Int!): Item
    #item
    updateItemById(itemId: ID!, itemDTO: ItemDTO!): Item
}

# category
type Category {
    id: ID
    name: String
    description: String
    image: String
}
type CategoryPageInfo {
    totalElements: ID
    totalPages: Int
    size: Int
    number: Int
    numberOfElements: Int
    sort: String
    content: [Category]
}
input CategoryDTO {
    name: String!
    description: String!
    imagePath: String
}
# location
type Location {
    id: ID
    locationInfo: String
    locationImage: String
}
enum RegionType {
    UNITED_STATES
    UNITED_KINGDOM
    GERMANY
    FRANCE
    JAPAN
    SOUTH_KOREA
    SPAIN
    AUSTRALIA
    MERCURY
    VENUS
    EARTH
    MARS
    JUPITER
    SATURN
    URANUS
    NEPTUNE
    LOCATION_1
    LOCATION_2
    LOCATION_3
    LOCATION_4
    LOCATION_5
    LOCATION_6
    LOCATION_7
    LOCATION_8
}
# order
type Order {
    id: ID
    orderNumber: String
    requestedBy: String
    status: String
    reviewedByAPV: Boolean
    reviewedByPRCH: Boolean
    respondedBy: String
    orderItems: [OrderItem]
    region: String
    location: String
    orderImage: String
    receiverId: String
    eventId: String
    eventNumber: String
    submissionDate: DateTime
    approverReplyDate: DateTime
    comments: String
}
type OrderItem {
    id: ID
    name: String
    description: String
    image: String
    itemId: ID
    quantity: Int
}
input OrderDTO {
    region: RegionType!
    location: String!
    receiverId: String!
    eventId: String!
    eventNumber: String!
}
#item
type Item {
    id: ID
    name: String
    description: String
    inStock: Int
    image: String
    region: RegionType
    lastAccessedDate: DateTime
    categoryId: ID
}
input ItemDTO {
    name: String!
    description: String!
    categoryId: Int!
    inStock: Int!
    imagePath: String
    region: RegionType!
}
type ItemPageInfo {
    totalElements: Int
    totalPages: Int
    size: Int
    number: Int
    numberOfElements: Int
    sort: String
    content: [Item]
}
#cartItems
type CartItemEntity {
    id: ID
    userId: ID
    itemId: ID
    name: String
    description: String
    image: String
    realInStock: Int
    quantity: Int
}